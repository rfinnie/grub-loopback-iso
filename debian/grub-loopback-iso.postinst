#!/bin/sh
# postinst script for grub-loopback-iso

set -e

update_grub_wrapper() {
  # default unless configured otherwise:
  ISO_LOCATION="/boot/isos"

  # grml-rescueboot backwards compatibility
  if [ -d /boot/grml ]; then
    ISO_LOCATION="${ISO_LOCATION} /boot/grml"
  fi

  if [ -r /etc/default/grub-loopback-isos ] ; then
    . /etc/default/grub-loopback-isos
  fi

  # grml-rescueboot backwards compatibility
  if [ -r /etc/default/grml-rescueboot ] ; then
    . /etc/default/grml-rescueboot
  fi

  iso_list=""
  for dir in $ISO_LOCATION; do
    for file in "$dir"/*.iso ; do
      [ -e "$file" ] || continue
      iso_list="$iso_list $file"
    done
  done

  if [ -z "$iso_list" ]; then
    echo "INFO: No *.iso files found inside ${ISO_LOCATION}."
    echo "INFO: Please create ${ISO_LOCATION} and place rescue ISO(s) there."
    echo "INFO: Finally invoke update-grub and enjoy your rescue system."
    return 0
  fi

  if ! which update-grub >/dev/null 2>&1; then
    echo "WARN: ISOs found inside ${ISO_LOCATION} but update-grub not present (huh?)"
    return 0
  fi

  if ! [ -e /boot/grub/grub.cfg ] ; then
    echo "WARN: ISOs found inside ${ISO_LOCATION} but /boot/grub/grub.cfg does not exist."
    echo "WARN: Ignoring request to run update-grub to avoid possible boot loader problems."
    return 0
  fi

  echo "INFO: ISOs found inside ${ISO_LOCATION}, invoking update-grub:"
  update-grub
}

case "$1" in
    configure)
      update_grub_wrapper
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

#DEBHELPER#

exit 0
